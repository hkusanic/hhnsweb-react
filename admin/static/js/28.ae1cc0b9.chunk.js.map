{"version":3,"sources":["pages/quote/list/index.js"],"names":["Option","QuotesList","connect","_ref","quote","props","_this","Object","_Users_cronj_Desktop_development_hhns_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__","this","_Users_cronj_Desktop_development_hhns_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_8__","_Users_cronj_Desktop_development_hhns_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_9__","call","showing100Characters","sentence","result","resultArray","split","length","slice","concat","join","handlePageChnage","page","dispatch","setState","currentPage","type","state","deleteQuote","uuid","onChangeDate","date","format","onChangeDateSort","order","createdDateSort","handleLanguage","language","hanldeRedirect","record","history","_this$state","push","pathname","id","handleSelectChange","value","author","_this$state2","handleResetButtonClick","_this$state3","perPage","_this2","_this$props","location","undefined","paginationCurrentPage","nextProps","isDeleted","_this3","_this$state4","quotes","totalQuotes","data","columns","title","dataIndex","key","render","renderHTML","topic","text","react__WEBPACK_IMPORTED_MODULE_13___default","a","createElement","Date","toDateString","react_router_dom__WEBPACK_IMPORTED_MODULE_17__","to","className","onClick","paginationConfig","current","pageSize","total","onChange","react_helmet__WEBPACK_IMPORTED_MODULE_14__","antd_es_switch__WEBPACK_IMPORTED_MODULE_5__","defaultChecked","checkedChildren","unCheckedChildren","style","width","marginLeft","antd_es_select__WEBPACK_IMPORTED_MODULE_12__","placeholder","antd_es_button__WEBPACK_IMPORTED_MODULE_3__","antd_es_table__WEBPACK_IMPORTED_MODULE_1__","rowKey","_id","rowClassName","needs_translation","onRow","onDoubleClick","scroll","x","dataSource","pagination","React","Component"],"mappings":"6UAYQA,sBAGFC,EADLC,YAAQ,SAAAC,GAAA,MAAgB,CAAEC,MAAlBD,EAAGC,uBAEV,SAAAH,EAAYI,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAR,IACjBK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAN,GAAAW,KAAAH,KAAMJ,KAgERQ,qBAAuB,SAAAC,GACrB,IAAIC,EAASD,EACTE,EAAcD,EAAOE,MAAM,KAK/B,OAJID,EAAYE,OAAS,KACvBF,EAAcA,EAAYG,MAAM,EAAG,IACnCJ,EAAM,GAAAK,OAAMJ,EAAYK,KAAK,KAAvB,QAEDN,GAxEUT,EA2EnBgB,iBAAmB,SAAAC,GAAQ,IACjBC,EAAalB,EAAKD,MAAlBmB,SAERlB,EAAKmB,SACH,CACEC,YAAaH,GAEf,WACEC,EAAS,CACPG,KAAM,mBACNJ,KAAMjB,EAAKsB,MAAMF,iBArFNpB,EA2FnBuB,YAAc,SAAAC,GAAQ,IACZN,EAAalB,EAAKD,MAAlBmB,SACRA,EAAS,CACPG,KAAM,2BACNG,SAEFN,EAAS,CACPG,KAAM,mBACNJ,KAAM,KAnGSjB,EAuGnByB,aAAe,SAAAC,IAEbR,EADqBlB,EAAKD,MAAlBmB,UACC,CACPG,KAAM,mBACNJ,KAAM,EACNS,KAAMA,EAAOA,EAAKC,OAAO,cAAgB,QA5G1B3B,EAgHnB4B,iBAAmB,SAAAC,IAEjBX,EADqBlB,EAAKD,MAAlBmB,UACC,CACPG,KAAM,mBACNJ,KAAM,EACNa,gBAAiBD,KArHF7B,EAyHnB+B,eAAiB,WAAM,IACbC,EAAahC,EAAKsB,MAAlBU,SACRhC,EAAKmB,SAAS,CACZa,UAAWA,KA5HIhC,EAgInBiC,eAAiB,SAAAC,GAAU,IACjBC,EAAYnC,EAAKD,MAAjBoC,QADiBC,EAESpC,EAAKsB,MAA/BU,EAFiBI,EAEjBJ,SAAUZ,EAFOgB,EAEPhB,YAClBe,EAAQE,KAAK,CACXC,SAAU,gBACVhB,MAAO,CAAEiB,GAAIL,EAAOV,KAAMQ,WAAUZ,kBArIrBpB,EAyInBwC,mBAAqB,SAAAC,GAAS,IACpBvB,EAAalB,EAAKD,MAAlBmB,SACRlB,EAAKmB,SACH,CACEuB,OAAQD,GAEV,WAAM,IAAAE,EAC4B3C,EAAKsB,MAA7BF,EADJuB,EACIvB,YAAasB,EADjBC,EACiBD,OACrBxB,EAAS,CACPG,KAAM,mBACNJ,KAAMG,EACNsB,cApJW1C,EA0JnB4C,uBAAyB,WAAM,IACrB1B,EAAalB,EAAKD,MAAlBmB,SACRlB,EAAKmB,SACH,CACEuB,OAAQ,IAEV,WAAM,IAAAG,EAC4B7C,EAAKsB,MAA7BF,EADJyB,EACIzB,YAAasB,EADjBG,EACiBH,OACrBxB,EAAS,CACPG,KAAM,mBACNJ,KAAMG,EACNsB,cAnKN1C,EAAKsB,MAAQ,CACXU,UAAU,EACVZ,YAAa,EACb0B,QAAS,GACTJ,OAAQ,IANO1C,mFAUC,IAAA+C,EAAA5C,KAAA6C,EACa7C,KAAKJ,MAA5BmB,EADU8B,EACV9B,SACAI,EAFU0B,EACAC,SACV3B,WACM4B,IAAV5B,GACEA,EAAM6B,sBACRhD,KAAKgB,SACH,CACEC,YAAaE,EAAM6B,uBAErB,WACEjC,EAAS,CACPG,KAAM,mBACNJ,KAAM8B,EAAKzB,MAAMF,gBAWzBF,EAAS,CACPG,KAAM,mBACNJ,KAAMd,KAAKmB,MAAMF,cAIrBF,EAAS,CACPG,KAAM,uBAGRH,EAAS,CACPG,KAAM,sBAGRH,EAAS,CACPG,KAAM,uEAIgB+B,GAAW,IAC3BlC,EAAaf,KAAKJ,MAAlBmB,SACJkC,EAAUtD,MAAMuD,WAClBnC,EAAS,CACPG,KAAM,eACNJ,KAAM,qCAkHH,IAAAqC,EAAAnD,KAAAoD,EAC4CpD,KAAKmB,MAAhDU,EADDuB,EACCvB,SAAUZ,EADXmC,EACWnC,YAAa0B,EADxBS,EACwBT,QAASJ,EADjCa,EACiCb,OAChC5C,EAAUK,KAAKJ,MAAfD,MACA0D,EAAwB1D,EAAxB0D,OAAQC,EAAgB3D,EAAhB2D,YACVC,EAAOF,EACPG,EAAU,CACd,CACEC,MAAO,QACPC,UAAW7B,EAAW,WAAa,WACnC8B,IAAK9B,EAAW,WAAa,WAC7B+B,OAAQ,SAAAH,GAAK,OACXA,EAAQI,IAAWV,EAAK/C,qBAAqBqD,IAAU,wBAE3D,CACEA,MAAO,QACPC,UAAW7B,EAAW,WAAa,WACnC8B,IAAK9B,EAAW,WAAa,WAC7B+B,OAAQ,SAAAE,GAAK,OACXA,EAAQD,IAAWV,EAAK/C,qBAAqB0D,IAAU,wBAE3D,CACEL,MAAO,SACPC,UAAW,SACXC,IAAK,SACLC,OAAQ,SAAAG,GAAI,OACVA,EAAOF,IAAWV,EAAK/C,qBAAqB2D,IAAS,wBAEzD,CACEN,MAAO,OACPC,UAAW,aACXC,IAAK,aACLC,OAAQ,SAAArC,GAAI,OAAIyC,EAAAC,EAAAC,cAAA,eAAAvD,OAAU,IAAIwD,KAAK5C,GAAM6C,mBAE3C,CACEX,MAAO,SACPE,IAAK,SACLC,OAAQ,SAAA7B,GAAM,OACZiC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,GAAI,CAAEnC,SAAU,gBAAiBhB,MAAO,CAAEiB,GAAIL,EAAOV,KAAMQ,WAAUZ,iBAErE+C,EAAAC,EAAAC,cAAA,KAAGK,UAAU,8BAEfP,EAAAC,EAAAC,cAAA,KACEK,UAAU,6BACVC,QAAS,WACPrB,EAAK/B,YAAYW,EAAOV,aAQ9BoD,EAAmB,CACvBC,QAASzD,EACT0D,SAAUhC,EACViC,MAAOtB,EACPuB,SAAU7E,KAAKa,kBAGjB,OACEmD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACY,EAAA,OAAD,CAAQrB,MAAM,iBACdO,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,oBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,oBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBACbP,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAAa,EAAA,GACEC,gBAAc,EACdC,gBAAiBpD,EAAW,KAAO,KACnCqD,kBAAmBrD,EAAW,KAAO,KACrCgD,SAAU7E,KAAK4B,eACf2C,UAAU,SACVY,MAAO,CAAEC,MAAO,QAASC,WAAY,YAI3CrB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACbP,EAAAC,EAAAC,cAAAoB,EAAA,GACEH,MAAO,CAAEC,MAAO,QAChBhD,GAAG,WACHmD,YAAY,SACZV,SAAU7E,KAAKqC,mBAEfC,MAAOC,GAAkB,iBAEzByB,EAAAC,EAAAC,cAAC3E,EAAD,CAAQ+C,MAAM,mBAAd,mBACA0B,EAAAC,EAAAC,cAAC3E,EAAD,CAAQ+C,MAAM,oBAAd,sBAGJ0B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACbP,EAAAC,EAAAC,cAAAsB,EAAA,GAAQtE,KAAK,UAAUsD,QAASxE,KAAKyC,wBAArC,YAMNuB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACbP,EAAAC,EAAAC,cAAAuB,EAAA,GAEEC,OAAQ,SAAA3D,GAAM,OAAIA,EAAO4D,KAEzBC,aAAc,SAAA7D,GAAM,OACW,IAA7BA,EAAO8D,kBAA6B,gBAAkB,cAExDC,MAAO,SAAA/D,GACL,MAAO,CACLgE,cAAe,WACb5C,EAAKrB,eAAeC,MAI1BwC,UAAU,iCACVyB,OAAQ,CAAEC,EAAG,QACbzC,QAASA,EACT0C,WAAY3C,EACZ4C,WAAY1B,cAnSD2B,IAAMC,eA4ShB7G","file":"static/js/28.ae1cc0b9.chunk.js","sourcesContent":["/* eslint-disable react/destructuring-assignment */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react'\nimport { Table, Select, Switch, Button } from 'antd'\nimport { Helmet } from 'react-helmet'\nimport { connect } from 'react-redux'\nimport renderHTML from 'react-render-html'\nimport { Link } from 'react-router-dom'\n\nimport './index.css'\n\nconst { Option } = Select\n\n@connect(({ quote }) => ({ quote }))\nclass QuotesList extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      language: true,\n      currentPage: 1,\n      perPage: 20,\n      author: '',\n    }\n  }\n\n  componentDidMount() {\n    const { dispatch, location } = this.props\n    const { state } = location\n    if (state !== undefined) {\n      if (state.paginationCurrentPage) {\n        this.setState(\n          {\n            currentPage: state.paginationCurrentPage,\n          },\n          () => {\n            dispatch({\n              type: 'quote/GET_QUOTES',\n              page: this.state.currentPage,\n            })\n          },\n        )\n      } else {\n        dispatch({\n          type: 'quote/GET_QUOTES',\n          page: this.state.currentPage,\n        })\n      }\n    } else {\n      dispatch({\n        type: 'quote/GET_QUOTES',\n        page: this.state.currentPage,\n      })\n    }\n\n    dispatch({\n      type: 'kirtan/RESET_STORE',\n    })\n\n    dispatch({\n      type: 'video/RESET_STORE',\n    })\n\n    dispatch({\n      type: 'blog/RESET_STORE',\n    })\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { dispatch } = this.props\n    if (nextProps.quote.isDeleted) {\n      dispatch({\n        type: 'quote/QUOTES',\n        page: 1,\n      })\n    }\n    // this.setState({\n    //   language: window.localStorage['app.settings.locale'] === '\"en-US\"',\n    // })\n  }\n\n  showing100Characters = sentence => {\n    let result = sentence\n    let resultArray = result.split(' ')\n    if (resultArray.length > 10) {\n      resultArray = resultArray.slice(0, 10)\n      result = `${resultArray.join(' ')}...`\n    }\n    return result\n  }\n\n  handlePageChnage = page => {\n    const { dispatch } = this.props\n\n    this.setState(\n      {\n        currentPage: page,\n      },\n      () => {\n        dispatch({\n          type: 'quote/GET_QUOTES',\n          page: this.state.currentPage,\n        })\n      },\n    )\n  }\n\n  deleteQuote = uuid => {\n    const { dispatch } = this.props\n    dispatch({\n      type: 'quote/DELETE_QUOTE_BY_ID',\n      uuid,\n    })\n    dispatch({\n      type: 'quote/GET_QUOTES',\n      page: 1,\n    })\n  }\n\n  onChangeDate = date => {\n    const { dispatch } = this.props\n    dispatch({\n      type: 'quote/GET_QUOTES',\n      page: 1,\n      date: date ? date.format('YYYY-MM-DD') : null,\n    })\n  }\n\n  onChangeDateSort = order => {\n    const { dispatch } = this.props\n    dispatch({\n      type: 'quote/GET_QUOTES',\n      page: 1,\n      createdDateSort: order,\n    })\n  }\n\n  handleLanguage = () => {\n    const { language } = this.state\n    this.setState({\n      language: !language,\n    })\n  }\n\n  hanldeRedirect = record => {\n    const { history } = this.props\n    const { language, currentPage } = this.state\n    history.push({\n      pathname: '/quote/create',\n      state: { id: record.uuid, language, currentPage },\n    })\n  }\n\n  handleSelectChange = value => {\n    const { dispatch } = this.props\n    this.setState(\n      {\n        author: value,\n      },\n      () => {\n        const { currentPage, author } = this.state\n        dispatch({\n          type: 'quote/GET_QUOTES',\n          page: currentPage,\n          author,\n        })\n      },\n    )\n  }\n\n  handleResetButtonClick = () => {\n    const { dispatch } = this.props\n    this.setState(\n      {\n        author: '',\n      },\n      () => {\n        const { currentPage, author } = this.state\n        dispatch({\n          type: 'quote/GET_QUOTES',\n          page: currentPage,\n          author,\n        })\n      },\n    )\n  }\n\n  render() {\n    const { language, currentPage, perPage, author } = this.state\n    const { quote } = this.props\n    const { quotes, totalQuotes } = quote\n    const data = quotes\n    const columns = [\n      {\n        title: 'Title',\n        dataIndex: language ? 'en.title' : 'ru.title',\n        key: language ? 'en.title' : 'ru.title',\n        render: title =>\n          title ? renderHTML(this.showing100Characters(title)) : 'Translation missing',\n      },\n      {\n        title: 'Topic',\n        dataIndex: language ? 'en.topic' : 'ru.topic',\n        key: language ? 'en.topic' : 'ru.topic',\n        render: topic =>\n          topic ? renderHTML(this.showing100Characters(topic)) : 'Translation missing',\n      },\n      {\n        title: 'Author',\n        dataIndex: 'author',\n        key: 'author',\n        render: text =>\n          text ? renderHTML(this.showing100Characters(text)) : 'Translation missing',\n      },\n      {\n        title: 'Date',\n        dataIndex: 'quote_date',\n        key: 'quote_date',\n        render: date => <span>{`${new Date(date).toDateString()}`}</span>,\n      },\n      {\n        title: 'Action',\n        key: 'action',\n        render: record => (\n          <span>\n            <Link\n              to={{ pathname: '/quote/create', state: { id: record.uuid, language, currentPage } }}\n            >\n              <i className=\"fa fa-edit mr-2 editIcon\" />\n            </Link>\n            <i\n              className=\"fa fa-trash mr-2 closeIcon\"\n              onClick={() => {\n                this.deleteQuote(record.uuid)\n              }}\n            />\n          </span>\n        ),\n      },\n    ]\n\n    const paginationConfig = {\n      current: currentPage,\n      pageSize: perPage,\n      total: totalQuotes,\n      onChange: this.handlePageChnage,\n    }\n\n    return (\n      <div>\n        <Helmet title=\"Lecture List\" />\n        <div className=\"card\">\n          <div className=\"card-header mb-3\">\n            <div className=\"row utils__title\">\n              <div className=\"col-lg-8 mb-3\">\n                <strong>Quote List</strong>\n                <Switch\n                  defaultChecked\n                  checkedChildren={language ? 'en' : 'ru'}\n                  unCheckedChildren={language ? 'en' : 'ru'}\n                  onChange={this.handleLanguage}\n                  className=\"toggle\"\n                  style={{ width: '100px', marginLeft: '10px' }}\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-lg-3\">\n                <Select\n                  style={{ width: '100%' }}\n                  id=\"disciple\"\n                  placeholder=\"Author\"\n                  onChange={this.handleSelectChange}\n                  // eslint-disable-next-line no-unneeded-ternary\n                  value={author ? author : 'Select Author'}\n                >\n                  <Option value=\"Niranjana Swami\">Niranjana Swami</Option>\n                  <Option value=\"Srila Prabhupada\">Srila Prabhupada</Option>\n                </Select>\n              </div>\n              <div className=\"col-lg-3\">\n                <Button type=\"primary\" onClick={this.handleResetButtonClick}>\n                  Reset\n                </Button>\n              </div>\n            </div>\n          </div>\n          <div className=\"card-body\">\n            <Table\n              // eslint-disable-next-line no-underscore-dangle\n              rowKey={record => record._id}\n              // eslint-disable-next-line no-unused-expressions\n              rowClassName={record =>\n                record.needs_translation === true ? 'NotTranslated' : 'translated'\n              }\n              onRow={record => {\n                return {\n                  onDoubleClick: () => {\n                    this.hanldeRedirect(record)\n                  },\n                }\n              }}\n              className=\"utils__scrollTable customTable\"\n              scroll={{ x: '100%' }}\n              columns={columns}\n              dataSource={data}\n              pagination={paginationConfig}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default QuotesList\n"],"sourceRoot":""}